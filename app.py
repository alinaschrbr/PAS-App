# -*- coding: utf-8 -*-
"""Willkommen bei Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb

# PAS
"""

import pandas as pd
from datetime import datetime

# --- Excel-Dateien einlesen ---
df_auftraege = pd.read_excel("auftraege.xlsx", engine="openpyxl")
df_aufwand = pd.read_excel("arbeitsaufwand.xlsx", engine="openpyxl")

# --- Verknüpfen über die Sachnummer ---
df = pd.merge(df_auftraege, df_aufwand, on="Sachnummer", how="left")

# --- Dringlichkeit berechnen (in Tagen) ---
heute = pd.to_datetime(datetime.today().date())
df["F2_Datum"] = pd.to_datetime(df["F2_Datum"])
df["Dringlichkeit_Tage"] = (df["F2_Datum"] - heute).dt.days

# Vorschau
print(df)

pipeline = {
    "Platz 1": 35,  # Minuten bereits eingeplant
    "Platz 2": 40,
    "Platz 3": 20
}

gewicht_dringlichkeit = 2.0
gewicht_aufwand = 1.0
gewicht_pipeline = 1.5

zuweisungen = []

for _, auftrag in df.iterrows():
    min_wert = float("inf")
    bester_platz = None

    for platz, last in pipeline.items():
        wert = (
            auftrag["Dringlichkeit_Tage"] * gewicht_dringlichkeit +
            auftrag["Aufwand_Min"] * gewicht_aufwand +
            last * gewicht_pipeline
        )
        if wert < min_wert:
            min_wert = wert
            bester_platz = platz

    # Pipeline aktualisieren
    pipeline[bester_platz] += auftrag["Aufwand_Min"]

    # Speichern
    zuweisungen.append({
        "Auftrag": auftrag["Auftrag"],
        "Platz": bester_platz,
        "Aufwand": auftrag["Aufwand_Min"],
        "F2_Datum": auftrag["F2_Datum"],
        "Dringlichkeit": auftrag["Dringlichkeit_Tage"]
    })

# Ergebnis als DataFrame anzeigen
df_zuweisung = pd.DataFrame(zuweisungen)
print(df_zuweisung)